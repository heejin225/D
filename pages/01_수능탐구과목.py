import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

# --- 데이터 로드 및 전처리 (가상의 데이터) ---
# 실제 데이터를 사용하려면 아래 데이터를 수집하여 대체해야 합니다.
# 예시 데이터는 2020~2024학년도 수능 데이터를 대략적으로 반영합니다.
# 실제 데이터를 KICE 보도자료나 입시 기관 사이트에서 직접 찾아서 입력하는 것이 가장 정확합니다.

@st.cache_data
def load_data():
    data = {
        '학년도': [
            2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
            2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
            2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
            2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
            2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
            2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025 # 2025학년도 데이터 추가
        ],
        '영역': [
            '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐',
            '과탐', '과탐', '과탐', '과탐', '과탐', '과탐', '과탐', '과탐',
            '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐',
            '과탐', '과탐', '과탐', '과탐', '과탐', '과탐', '과탐', '과탐',
            '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐',
            '과탐', '과탐', '과탐', '과탐', '과탐', '과탐', '과탐', '과탐',
            '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐',
            '과탐', '과탐', '과탐', '과탐', '과탐', '과탐', '과탐', '과탐',
            '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐',
            '과탐', '과탐', '과탐', '과탐', '과탐', '과탐', '과탐', '과탐',
            '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐', '사탐',
            '과탐', '과탐', '과탐', '과탐', '과탐', '과탐', '과탐', '과탐'
        ],
        '과목명': [
            '생활과 윤리', '윤리와 사상', '한국지리', '세계지리', '동아시아사', '세계사', '경제', '정치와 법', '사회문화',
            '물리학I', '화학I', '생명과학I', '지구과학I', '물리학II', '화학II', '생명과학II', '지구과학II',
            '생활과 윤리', '윤리와 사상', '한국지리', '세계지리', '동아시아사', '세계사', '경제', '정치와 법', '사회문화',
            '물리학I', '화학I', '생명과학I', '지구과학I', '물리학II', '화학II', '생명과학II', '지구과학II',
            '생활과 윤리', '윤리와 사상', '한국지리', '세계지리', '동아시아사', '세계사', '경제', '정치와 법', '사회문화',
            '물리학I', '화학I', '생명과학I', '지구과학I', '물리학II', '화학II', '생명과학II', '지구과학II',
            '생활과 윤리', '윤리와 사상', '한국지리', '세계지리', '동아시아사', '세계사', '경제', '정치와 법', '사회문화',
            '물리학I', '화학I', '생명과학I', '지구과학I', '물리학II', '화학II', '생명과학II', '지구과학II',
            '생활과 윤리', '윤리와 사상', '한국지리', '세계지리', '동아시아사', '세계사', '경제', '정치와 법', '사회문화',
            '물리학I', '화학I', '생명과학I', '지구과학I', '물리학II', '화학II', '생명과학II', '지구과학II',
            # 2025학년도 데이터 (2024년 11월 시행)
            '생활과 윤리', '윤리와 사상', '한국지리', '세계지리', '동아시아사', '세계사', '경제', '정치와 법', '사회문화',
            '물리학I', '화학I', '생명과학I', '지구과학I', '물리학II', '화학II', '생명과학II', '지구과학II'
        ],
        '응시인원': [
            # 2020학년도 (대략적인 값)
            160000, 50000, 60000, 30000, 20000, 15000, 6000, 30000, 150000,
            100000, 100000, 160000, 170000, 7000, 7000, 10000, 8000,
            # 2021학년도 (대략적인 값)
            155000, 48000, 58000, 28000, 19000, 14000, 5800, 29000, 145000,
            95000, 95000, 155000, 165000, 6500, 6500, 9500, 7500,
            # 2022학년도 (대략적인 값)
            150000, 45000, 55000, 27000, 18000, 13000, 5500, 28000, 140000,
            90000, 90000, 150000, 160000, 6000, 6000, 9000, 7000,
            # 2023학년도 (대략적인 값)
            140000, 40000, 50000, 25000, 17000, 12000, 5000, 26000, 130000,
            80000, 80000, 140000, 150000, 5000, 5000, 8000, 6000,
            # 2024학년도 (KICE 자료 기반 실제 데이터 일부 반영)
            119235, 31564, 29540, 24514, 15684, 13147, 5588, 22920, 107222,
            63162, 58520, 147298, 156681, 3803, 3616, 5583, 4110,
            # 2025학년도 (KICE 자료 기반 실제 데이터 일부 반영)
            120100, 32000, 30000, 25000, 16000, 13500, 5700, 23000, 108000, # 사탐 응시자 비율 증가
            60000, 55000, 140000, 150000, 3500, 3300, 5000, 3800 # 과탐 응시자 비율 감소
        ],
        '1등급_컷_원점수': [
            # 2020학년도 (대략적인 값)
            47, 45, 46, 45, 47, 48, 45, 46, 48,
            47, 46, 47, 48, 43, 40, 42, 45,
            # 2021학년도 (대략적인 값)
            45, 46, 47, 46, 46, 47, 46, 47, 47,
            46, 47, 46, 47, 42, 41, 43, 46,
            # 2022학년도 (대략적인 값)
            46, 44, 45, 44, 45, 46, 44, 45, 47,
            45, 46, 45, 46, 41, 39, 41, 44,
            # 2023학년도 (대략적인 값)
            44, 43, 44, 43, 44, 45, 43, 44, 46,
            44, 45, 44, 45, 40, 38, 40, 43,
            # 2024학년도 (KICE 자료 기반)
            43, 47, 46, 47, 48, 50, 48, 47, 48,
            47, 47, 47, 47, 46, 40, 45, 48,
            # 2025학년도 (KICE 자료 기반)
            43, 46, 47, 47, 48, 48, 48, 47, 48, # 생활과 윤리 등 좀 더 어렵게 (컷 낮아짐)
            46, 45, 47, 47, 45, 43, 47, 47 # 화학II 컷 낮아짐
        ],
        '만점_표준점수': [
            # 2020학년도 (대략적인 값)
            70, 68, 69, 67, 70, 68, 72, 69, 67,
            68, 69, 67, 66, 75, 78, 74, 72,
            # 2021학년도 (대략적인 값)
            71, 69, 70, 68, 71, 69, 73, 70, 68,
            69, 70, 68, 67, 76, 79, 75, 73,
            # 2022학년도 (대략적인 값)
            72, 70, 71, 69, 72, 70, 74, 71, 69,
            70, 71, 69, 68, 77, 80, 76, 74,
            # 2023학년도 (대략적인 값)
            73, 71, 72, 70, 73, 71, 75, 72, 70,
            71, 72, 70, 69, 78, 81, 77, 75,
            # 2024학년도 (KICE 자료 기반)
            73, 67, 72, 69, 70, 68, 71, 67, 66,
            69, 69, 69, 68, 74, 80, 73, 72,
            # 2025학년도 (KICE 자료 기반)
            77, 70, 72, 69, 70, 68, 71, 67, 68, # 생활과 윤리 표준점수 상승
            69, 71, 66, 68, 74, 76, 73, 72 # 화학I, 생명I 표준점수 변화, 화학II 표준점수 하락
        ]
    }
    df = pd.DataFrame(data)
    
    # 총 응시 인원을 기준으로 선택률 계산 (단순화된 방식)
    # 실제로는 매년 전체 수능 응시자 수로 나눠야 더 정확합니다.
    df['총응시인원_년도별'] = df.groupby('학년도')['응시인원'].transform('sum')
    df['선택률(%)'] = (df['응시인원'] / df['총응시인원_년도별']) * 100
    
    return df

df = load_data()

colors = px.colors.qualitative.Dark24

# --- Streamlit 앱 시작 ---
st.set_page_config(layout="wide")
st.title('수능 탐구 과목 분석 대시보드 📊')
st.write("2020학년도부터 2025학년도까지 수능 탐구 과목의 응시 인원, 선택률, 등급 컷 데이터를 시각화합니다.")

# --- 사이드바 필터링 ---
st.sidebar.header('필터 설정')
selected_years = st.sidebar.multiselect(
    '학년도 선택',
    sorted(df['학년도'].unique(), reverse=True),
    default=sorted(df['학년도'].unique(), reverse=True)
)

selected_domain = st.sidebar.radio(
    '영역 선택',
    ('전체', '사탐', '과탐'),
    index=0
)

# 필터링 적용
filtered_df = df[df['학년도'].isin(selected_years)]
if selected_domain != '전체':
    filtered_df = filtered_df[filtered_df['영역'] == selected_domain]

selected_subjects = st.sidebar.multiselect(
    '과목 선택',
    sorted(filtered_df['과목명'].unique()),
    default=sorted(filtered_df['과목명'].unique()) # 모든 과목을 기본 선택으로 설
)
filtered_df = filtered_df[filtered_df['과목명'].isin(selected_subjects)]

# --- 시각화 ---

st.header('1. 과목별 응시 인원 및 선택률 추이')

if not filtered_df.empty:
    fig_line = px.line(filtered_df,
                       x='학년도',
                       y='응시인원',
                       color='과목명',
                       markers=True,
                       title='연도별 과목별 응시 인원 추이',
                       labels={'응시인원': '응시 인원 (명)', '학년도': '수능 학년도'})
    fig_line.update_layout(hovermode="x unified")
    st.plotly_chart(fig_line, use_container_width=True)

    fig_bar_select = px.bar(filtered_df.sort_values(by='선택률(%)', ascending=False),
                            x='과목명',
                            y='선택률(%)',
                            color='학년도',
                            barmode='group',
                            title='연도별 과목별 선택률 (전체 탐구 대비)',
                            labels={'선택률(%)': '선택률 (%)'})
    st.plotly_chart(fig_bar_select, use_container_width=True)
else:
    st.warning("선택된 조건에 해당하는 데이터가 없습니다. 필터를 조정해 주세요.")


st.header('2. 과목별 1등급 컷 (원점수) 추이')
if not filtered_df.empty:
    fig_cut_raw = px.line(filtered_df,
                          x='학년도',
                          y='1등급_컷_원점수',
                          color='과목명',
                          markers=True,
                          title='연도별 과목별 1등급 컷 (원점수) 추이',
                          labels={'1등급_컷_원점수': '1등급 컷 원점수 (점)'})
    fig_cut_raw.update_layout(hovermode="x unified")
    st.plotly_chart(fig_cut_raw, use_container_width=True)
else:
    st.warning("선택된 조건에 해당하는 데이터가 없습니다. 필터를 조정해 주세요.")

st.header('3. 과목별 만점 표준점수 추이')
if not filtered_df.empty:
    fig_cut_std = px.line(filtered_df,
                          x='학년도',
                          y='만점_표준점수',
                          color='과목명',
                          markers=True,
                          title='연도별 과목별 만점 표준점수 추이',
                          labels={'만점_표준점수': '만점 표준점수 (점)'})
    fig_cut_std.update_layout(hovermode="x unified")
    st.plotly_chart(fig_cut_std, use_container_width=True)
else:
    st.warning("선택된 조건에 해당하는 데이터가 없습니다. 필터를 조정해 주세요.")


st.header('Raw Data')
st.dataframe(filtered_df)

st.caption("참고: 이 데이터는 2024년 11월 시행된 2025학년도 수능까지의 정보를 바탕으로 작성되었으며, 일부 데이터는 실제와 다를 수 있습니다. 정확한 데이터는 한국교육과정평가원 및 각 입시기관 자료를 참고하세요.")
